import type { NextPage } from 'next'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { gql, useQuery } from '@apollo/client'
import { initializeApollo } from '../apollo'



const query = gql`
    query {
        page(id: "sample-page", idType: URI) {
            title
            uri
            blocks {
                name
                __typename
                saveContent
                order
            }
        }
    }
`

const Home: NextPage = () => {

    const { loading, error, data } = useQuery(query)

    if (loading) return <p>Loading...</p>;

    if (error) return <p>Error :{JSON.stringify(error)}</p>;

    function loopBlocks() {
        const result = []
        let i = 0
        for (const block of data.page.blocks) {
            result.push(<div key={i} dangerouslySetInnerHTML={block.saveContent} />)
            i++
        }
        return result
    }

    return (
        <div className={styles.container}>
            <Head>
                <title>Next Boo</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className={styles.main}>
                <h1>Boo</h1>
                <hr />
                <pre style={{ width: "80%", overflow: 'auto', whiteSpace: "pre-wrap" }}>
                    {JSON.stringify(data, null, 2)}
                </pre>

                {/* {data.page.blocks.map((block: any) => {
                    if (!block.saveContent) {
                        return <p key={block.order}>NO SAVE CONTENT</p>
                    }
                    return <div dangerouslySetInnerHTML={block.saveContent} />
                })} */}
                {/* {loopBlocks()} */}






            </main>
        </div>
    )
}

export async function getServerSideProps(props: any) {
    console.log(props);

    // const apolloClient = initializeApollo()

    // await apolloClient.query({
    //   query: query,
    //   variables: allPostsQueryVars,
    // })

    // return addApolloState(apolloClient, {
    //   props: {},
    // })
}

export default Home
