{"version":3,"file":"index2.js","mappings":";;;;;;;;;;;;;;;;;AAAA,MAAM;EAAEA,iBAAF;EAAqBC,WAArB;EAAkCC;AAAlC,IAAuDC,EAAE,CAACC,WAAhE;AACA,MAAM;EAAEC,SAAF;EAAaC,MAAb;EAAqBC;AAArB,IAA2CJ,EAAE,CAACK,UAApD;AAEe,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAChC,MAAM;IAAEC,UAAF;IAAcC;EAAd,IAAgCF,KAAtC;;EAEA,MAAMG,WAAW,GAAG,MAAM;IACtBH,KAAK,CAACE,aAAN,CAAoB;MAChBE,OAAO,EAAE,CADO;MAEhBC,QAAQ,EAAE;IAFM,CAApB;EAIH,CALD;;EAOA,MAAMC,aAAa,GAAIC,KAAD,IAAW;IAC7BP,KAAK,CAACE,aAAN,CAAoB;MAChBE,OAAO,EAAEG,KAAK,CAACC,EADC;MAEhBH,QAAQ,EAAEE,KAAK,CAACE;IAFA,CAApB;EAIH,CALD;;EAOA,MAAMC,UAAU,GAAG;IACfC,KAAK,EAAE,MADQ;IAEfC,MAAM,EAAE;EAFO,CAAnB;EAKA,OACI,kIAEI,kEAAC,iBAAD,QAEI,kEAAC,SAAD;IAAW,KAAK,EAAE,kBAAlB;IAAsC,WAAW,EAAE;EAAnD,GACI;IAAK,SAAS,EAAC;EAAf,GAEI,kEAAC,gBAAD,QAEI,kEAAC,WAAD;IACI,QAAQ,EAAEN,aADd;IAEI,KAAK,EAAEL,UAAU,CAACG,OAFtB,CAGI;IAHJ;IAII,YAAY,EAAE,CAAC,OAAD,CAJlB,CAKI;IALJ;IAMI,MAAM,EAAE;MAAA,IAAC;QAAES;MAAF,CAAD;MAAA,OACJ,kEAAC,MAAD;QACI,SAAS,EACLZ,UAAU,CAACG,OAAX,IAAsB,CAAtB,GACM,oCADN,GAEM,qCAJd;QAMI,OAAO,EAAES;MANb,GAQKZ,UAAU,CAACG,OAAX,IAAsB,CAAtB,IACG,iBATR,EAUKJ,KAAK,CAACO,KAAN,IAAeO,SAAf,IACG,kEAAC,iBAAD;QACI,YAAY,EACRd,KAAK,CAACO,KAAN,CAAYQ,aAAZ,CACKJ,KAHb;QAKI,aAAa,EACTX,KAAK,CAACO,KAAN,CAAYQ,aAAZ,CACKH;MAPb,GAUI;QACI,GAAG,EAAEZ,KAAK,CAACO,KAAN,CAAYS;MADrB,EAVJ,CAXR,CADI;IAAA;EANZ,EAFJ,CAFJ,EA0CKf,UAAU,CAACG,OAAX,IAAsB,CAAtB,IACG,kEAAC,gBAAD,QACI,kEAAC,WAAD;IACI,KAAK,EAAE,eADX;IAEI,KAAK,EAAEH,UAAU,CAACG,OAFtB;IAGI,QAAQ,EAAEE,aAHd;IAII,YAAY,EAAE,CAAC,OAAD,CAJlB;IAKI,MAAM,EAAE;MAAA,IAAC;QAAEO;MAAF,CAAD;MAAA,OACJ,kEAAC,MAAD;QACI,OAAO,EAAEA,IADb;QAEI,SAAS,MAFb;QAGI,OAAO;MAHX,GAKK,eALL,CADI;IAAA;EALZ,EADJ,CA3CR,EA8DKZ,UAAU,CAACG,OAAX,IAAsB,CAAtB,IACG,kEAAC,gBAAD,QACI,kEAAC,MAAD;IACI,OAAO,EAAED,WADb;IAEI,MAAM,MAFV;IAGI,aAAa;EAHjB,GAKK,cALL,CADJ,CA/DR,CADJ,CAFJ,CAFJ,EAiFI;IACI,SAAS,EAAC,YADd;IAEI,GAAG,EAAEF,UAAU,CAACI,QAAX,IAAuB,EAAvB,GAA4BJ,UAAU,CAACI,QAAvC,GAAkD,EAF3D;IAGI,GAAG,EAAC,EAHR;IAII,KAAK,EAAEK;EAJX,EAjFJ,CADJ;AA0FH;;;;;;;;;;ACnHD;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;CCHA;AAEC;;AACAjB,EAAE,CAACwB,MAAH,CAAUC,iBAAV,CAA6B,oBAA7B,EAAmD;EAC/CC,KAAK,EAAE,sBADwC;EAE/CC,IAAI,EAAE,QAFyC;EAG/CC,WAAW,EAAE,2BAHkC;EAI/CC,QAAQ,EAAE,MAJqC;EAK/CvB,IAAI,EAAEA,mDALyC;EAM/CwB,IAAI,EAAE,YAAW;IAAC,OAAO,IAAP;EAAY;AANiB,CAAnD,E","sources":["webpack://booplugin/./src/block/edit.jsx","webpack://booplugin/external window [\"wp\",\"element\"]","webpack://booplugin/webpack/bootstrap","webpack://booplugin/webpack/runtime/compat get default export","webpack://booplugin/webpack/runtime/define property getters","webpack://booplugin/webpack/runtime/hasOwnProperty shorthand","webpack://booplugin/webpack/runtime/make namespace object","webpack://booplugin/./src/block2/index2.jsx"],"sourcesContent":["const { InspectorControls, MediaUpload, MediaUploadCheck } = wp.blockEditor\nconst { PanelBody, Button, ResponsiveWrapper } = wp.components\n\nexport default function edit(props) {\n    const { attributes, setAttributes } = props\n\n    const removeMedia = () => {\n        props.setAttributes({\n            mediaId: 0,\n            mediaUrl: \"\",\n        })\n    }\n\n    const onSelectMedia = (media) => {\n        props.setAttributes({\n            mediaId: media.id,\n            mediaUrl: media.url,\n        })\n    }\n\n    const blockStyle = {\n        width: \"100%\",\n        height: \"400px\",\n    }\n\n    return (\n        <>\n            {/* InspectorControls is what renders in the sidebar */}\n            <InspectorControls>\n                {/* PanelBody makes the sidebar thing collapsible */}\n                <PanelBody title={\"Select the image\"} initialOpen={true}>\n                    <div className=\"editor-post-featured-image\">\n                        {/* Wrapper to check if user has access to library */}\n                        <MediaUploadCheck>\n                            {/* Media upload panel */}\n                            <MediaUpload\n                                onSelect={onSelectMedia}\n                                value={attributes.mediaId}\n                                // Only allow images when selecting media\n                                allowedTypes={[\"image\"]}\n                                // How to actually render this component\n                                render={({ open }) => (\n                                    <Button\n                                        className={\n                                            attributes.mediaId == 0\n                                                ? \"editor-post-featured-image__toggle\"\n                                                : \"editor-post-featured-image__preview\"\n                                        }\n                                        onClick={open}\n                                    >\n                                        {attributes.mediaId == 0 &&\n                                            \"Choose an image\"}\n                                        {props.media != undefined && (\n                                            <ResponsiveWrapper\n                                                naturalWidth={\n                                                    props.media.media_details\n                                                        .width\n                                                }\n                                                naturalHeight={\n                                                    props.media.media_details\n                                                        .height\n                                                }\n                                            >\n                                                <img\n                                                    src={props.media.source_url}\n                                                />\n                                            </ResponsiveWrapper>\n                                        )}\n                                    </Button>\n                                )}\n                            />\n                        </MediaUploadCheck>\n                        {/* This is a button that replaces the image you choose */}\n                        {attributes.mediaId != 0 && (\n                            <MediaUploadCheck>\n                                <MediaUpload\n                                    title={\"Replace image\"}\n                                    value={attributes.mediaId}\n                                    onSelect={onSelectMedia}\n                                    allowedTypes={[\"image\"]}\n                                    render={({ open }) => (\n                                        <Button\n                                            onClick={open}\n                                            isDefault\n                                            isLarge\n                                        >\n                                            {\"Replace image\"}\n                                        </Button>\n                                    )}\n                                />\n                            </MediaUploadCheck>\n                        )}\n                        {/* This is a button that removes the current image */}\n                        {attributes.mediaId != 0 && (\n                            <MediaUploadCheck>\n                                <Button\n                                    onClick={removeMedia}\n                                    isLink\n                                    isDestructive\n                                >\n                                    {\"Remove image\"}\n                                </Button>\n                            </MediaUploadCheck>\n                        )}\n                    </div>\n                </PanelBody>\n            </InspectorControls>\n            <img\n                className=\"edit image\"\n                src={attributes.mediaUrl != \"\" ? attributes.mediaUrl : \"\"}\n                alt=\"\"\n                style={blockStyle}\n            />\n        </>\n    )\n}\n","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import edit from '../block/edit';\n\n\n// const {registerBlockType} = wp.blocks\n\n // Register the block\n wp.blocks.registerBlockType( 'faylee/test-block2', {\n     title: \"Faylee's test block2\",\n     icon: \"hammer\",\n     description: \"describing the test block\",\n     category: \"text\",\n     edit: edit,\n     save: function() {return null}\n } );"],"names":["InspectorControls","MediaUpload","MediaUploadCheck","wp","blockEditor","PanelBody","Button","ResponsiveWrapper","components","edit","props","attributes","setAttributes","removeMedia","mediaId","mediaUrl","onSelectMedia","media","id","url","blockStyle","width","height","open","undefined","media_details","source_url","blocks","registerBlockType","title","icon","description","category","save"],"sourceRoot":""}